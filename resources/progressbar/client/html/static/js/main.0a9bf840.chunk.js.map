{"version":3,"sources":["components/progressbar/styles.js","components/progressbar/index.js","styles/global.js","index.js"],"names":["ProgressContainer","styled","div","ProgressLabel","Label","ProgressBarContainer","ProgressBarFill","Progressbar","useState","progressLabel","setLabel","percentProgress","setProgress","useEffect","timer","undefined","window","alt","emit","on","label","duration","console","log","currentTime","setInterval","clearInterval","style","width","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAOaA,GALYC,IAAOC,IAAV,mEAKWD,IAAOC,IAAV,0MAYjBC,EAAgBF,IAAOC,IAAV,+LAUbE,EAAQH,IAAOC,IAAV,kKASLG,EAAuBJ,IAAOC,IAAV,sPAYpBI,EAAkBL,IAAOC,IAAV,iL,OCCbK,EAhDK,WAGhB,MAAkCC,mBAAS,gBAA3C,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAuCF,mBAAS,KAAhD,mBAAOG,EAAP,KAAwBC,EAAxB,KAiCA,OA/BAC,qBAAU,WACN,IAAIC,OAAQC,EAuBT,QAASC,SAERC,IAAIC,KAAK,SAETD,IAAIE,GAAG,qBA1BY,SAACC,GAA4B,IAArBC,EAAoB,uDAAT,IACtCC,QAAQC,IAAI,OAAQH,EAAOC,GAC3B,IAAIG,EAAc,EAClBd,EAASU,GACTN,EAAQW,aAAY,WAIhBb,EAAY,GAAD,OAFU,IAAYS,GADjCG,GAAe,IAEiC,KAE7CA,GAAeH,GACVP,IACAF,EAAY,GAAD,OAAI,IACfc,cAAcZ,GACX,QAASE,QAERC,IAAIC,KAAK,wBAEbJ,OAAQC,KAGjB,UAQR,IAEN,eAACf,EAAD,WACO,cAACG,EAAD,UACI,cAACC,EAAD,UAAQK,MAEZ,cAACJ,EAAD,UACI,cAACC,EAAD,CAAiBqB,MAAO,CAACC,MAAM,GAAD,OAAKjB,EAAL,cC5C3BkB,cAAf,yjBCIAC,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.0a9bf840.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    width: 100vw;\n    height: 100vh;\n`;\n\nexport const ProgressContainer = styled.div`\n    z-index: 5;\n    color: #000;\n    width: 15%;\n    position: fixed;\n    bottom: 12.65%;\n    left: 0;\n    right: 0;\n    margin-left: auto;\n    margin-right: auto;\n`;\n\nexport const ProgressLabel = styled.div`\n    width: 100%;\n    height: 4vh;\n    line-height: 4vh;\n    text-align: center;\n    position: absolute;\n    display: inline-block;\n    white-space: nowrap;\n`;\n\nexport const Label = styled.div`\n    font-size: 1.3vh;\n    line-height: 4vh;\n    position: relative;\n    color: #ffffff;\n    z-index: 10;\n    font-weight: bold;\n`;\n\nexport const ProgressBarContainer = styled.div`\n    width: 100%;\n    height: 4vh;\n    background: rgba(0, 0, 0, 0.246);\n    text-align: left;\n    overflow: hidden;\n    position: relative;\n    display: block;\n    white-space: nowrap;\n    border-radius: 2px;\n`;\n\nexport const ProgressBarFill = styled.div`\n    background-color: #FFC130 !important;\n    width: 0%;\n    height: 4vh;\n    transition: width 0.3s;\n    transition-timing-function: ease-out;\n`\n","import { useEffect, useState } from \"react\";\nimport { ProgressContainer, ProgressLabel, Label, ProgressBarContainer, ProgressBarFill } from \"./styles\";\n\nconst Progressbar = () => {\n    \n    // const [progressbarActive, setActive] = useState(false) \n    const [progressLabel, setLabel] = useState('Desconhecido') \n    const [percentProgress, setProgress] = useState('0') \n    \n    useEffect(() => {\n        let timer = undefined;\n        const createProgress = (label, duration = 5000) => {\n            console.log('test', label, duration)\n            let currentTime = 0;\n            setLabel(label)\n            timer = setInterval(() => {\n                currentTime += 10;\n                const fillPerTick = (10 * 100) / duration\n                const currentFill = fillPerTick * currentTime / 10\n                setProgress(`${currentFill}`)\n                if(currentTime >= duration){\n                    if (timer) {\n                        setProgress(`${0}`)\n                        clearInterval(timer);\n                        if('alt' in window){\n                            // eslint-disable-next-line no-undef\n                            alt.emit('progressBar:finished')\n                        }\n                        timer = undefined;\n                      }\n                }\n            }, 10)\n        } \n        if('alt' in window){\n             // eslint-disable-next-line no-undef\n            alt.emit('ready')\n            // eslint-disable-next-line no-undef\n            alt.on('progressBar:start', createProgress)\n        }\n    }, [])\n    return (\n <ProgressContainer>\n        <ProgressLabel>\n            <Label>{progressLabel}</Label>\n        </ProgressLabel>\n        <ProgressBarContainer>\n            <ProgressBarFill style={{width: `${percentProgress}%`}}></ProgressBarFill>\n        </ProgressBarContainer>\n    </ProgressContainer>\n    )\n}\nexport default Progressbar","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n  body {\n    width: 100vw;\n    height: 100vh;\n    font-family: 'Poppins', sans-serif;\n    -webkit-font-smoothing: antialiased;\n    user-select: none;\n  }\n  #root{\n    width: 100%;\n    height: 100%;\n  }\n  a {\n    text-decoration: none;\n  }\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Progressbar from './components/progressbar/index';\nimport GlobalStyle from \"./styles/global\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Progressbar />\n    <GlobalStyle />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}